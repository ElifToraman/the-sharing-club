{"ast":null,"code":"var _jsxFileName = \"/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/tasks/components/TaskList.js\";\nimport React from \"react\";\nimport \"./TaskList.css\";\nimport TaskItem from \"./TaskItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = props => {\n  if (props.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No tasks found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        to: \"/groups/\" + props.groupId + \"/tasks/new\",\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"task-list\",\n    children: [props.items.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      id: task.id,\n      title: task.title,\n      description: task.description,\n      score: task.score,\n      isCompleted: task.isCompleted,\n      groupId: task.groupId,\n      creatorId: task.creator,\n      refreshPage: props.refreshPage\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        to: \"/groups/\" + props.groupId + \"/tasks/new\",\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","Button","TaskList","props","items","length","groupId","map","task","id","title","description","score","isCompleted","creator","refreshPage"],"sources":["/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/tasks/components/TaskList.js"],"sourcesContent":["import React from \"react\";\nimport \"./TaskList.css\";\n\nimport TaskItem from \"./TaskItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\n\nconst TaskList = props => {\n    if( props.items.length === 0) {\n        return (\n            <div className=\"no-task\">\n                <h2>No tasks found!</h2>\n                <Button to={\"/groups/\" + props.groupId +\"/tasks/new\"} >Create New Task</Button>\n            </div>\n        );\n    }\n    return (\n        <ul className=\"task-list\">\n            {props.items.map(task => (\n                <TaskItem\n                    key={task.id}\n                    id={task.id}\n                    title={task.title}\n                    description={task.description}\n                    score={task.score}\n                    isCompleted={task.isCompleted}\n                    groupId={task.groupId}\n                    creatorId={task.creator}\n                    refreshPage={props.refreshPage}\n                />\n            ))}\n            <div className=\"task-list center\">\n                <Button to={\"/groups/\" + props.groupId +\"/tasks/new\"} >Create New Task</Button>\n            </div>\n        </ul>\n    );\n};\n\nexport default TaskList;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EACtB,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B;IAC1B,oBACI;MAAK,SAAS,EAAC,SAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,MAAD;QAAQ,EAAE,EAAE,aAAaF,KAAK,CAACG,OAAnB,GAA4B,YAAxC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;EACD,oBACI;IAAI,SAAS,EAAC,WAAd;IAAA,WACKH,KAAK,CAACC,KAAN,CAAYG,GAAZ,CAAgBC,IAAI,iBACjB,QAAC,QAAD;MAEI,EAAE,EAAEA,IAAI,CAACC,EAFb;MAGI,KAAK,EAAED,IAAI,CAACE,KAHhB;MAII,WAAW,EAAEF,IAAI,CAACG,WAJtB;MAKI,KAAK,EAAEH,IAAI,CAACI,KALhB;MAMI,WAAW,EAAEJ,IAAI,CAACK,WANtB;MAOI,OAAO,EAAEL,IAAI,CAACF,OAPlB;MAQI,SAAS,EAAEE,IAAI,CAACM,OARpB;MASI,WAAW,EAAEX,KAAK,CAACY;IATvB,GACSP,IAAI,CAACC,EADd;MAAA;MAAA;MAAA;IAAA,QADH,CADL,eAcI;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACI,QAAC,MAAD;QAAQ,EAAE,EAAE,aAAaN,KAAK,CAACG,OAAnB,GAA4B,YAAxC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAdJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,CA7BD;;KAAMJ,Q;AA+BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}