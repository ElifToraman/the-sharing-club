{"ast":null,"code":"var _jsxFileName = \"/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/groups/pages/GroupDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport TaskList from \"../../tasks/components/TaskList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport UsersList from \"../../user/components/UsersList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GroupDetails = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [groupDetails, setGroupDetails] = useState();\n  const groupId = useParams().groupId;\n  const history = useHistory();\n\n  const refreshPage = () => {\n    history.go(0);\n  };\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const responseData = await sendRequest('http://localhost:5000/api/groups/' + groupId, 'GET', null, {\n          Authorization: 'Bearer ' + auth.token\n        });\n        setGroupDetails(responseData);\n      } catch (err) {}\n    };\n\n    fetchTasks();\n  }, [sendRequest, auth.token, groupId]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), !isLoading && groupDetails && /*#__PURE__*/_jsxDEV(UsersList, {\n      items: groupDetails.users,\n      groupId: groupId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 44\n    }, this), !isLoading && groupDetails && /*#__PURE__*/_jsxDEV(TaskList, {\n      items: groupDetails.tasks,\n      groupId: groupId,\n      refreshPage: refreshPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GroupDetails, \"/6UQpZhFQ+DkQtLPLeTdFYx0o/0=\", false, function () {\n  return [useHttpClient, useParams, useHistory];\n});\n\n_c = GroupDetails;\nexport default GroupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupDetails\");","map":{"version":3,"names":["React","useContext","useEffect","useState","TaskList","ErrorModal","LoadingSpinner","useHttpClient","useParams","useHistory","AuthContext","UsersList","GroupDetails","auth","isLoading","error","sendRequest","clearError","groupDetails","setGroupDetails","groupId","history","refreshPage","go","fetchTasks","responseData","Authorization","token","err","users","tasks"],"sources":["/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/groups/pages/GroupDetails.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport TaskList from \"../../tasks/components/TaskList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {useHttpClient} from \"../../shared/hooks/http-hook\";\nimport {useParams, useHistory} from \"react-router-dom\";\nimport {AuthContext} from \"../../shared/context/auth-context\";\nimport UsersList from \"../../user/components/UsersList\";\n\nconst GroupDetails = () => {\n    const auth = useContext(AuthContext);\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n    const [groupDetails, setGroupDetails] = useState();\n    const groupId = useParams().groupId;\n    const history = useHistory();\n\n    const refreshPage = () => {\n        history.go(0);\n    }\n\n    useEffect(()=> {\n        const fetchTasks = async () => {\n            try {\n                const responseData = await sendRequest(\n                    'http://localhost:5000/api/groups/' + groupId,\n                    'GET',\n                    null,\n                    {\n                        Authorization: 'Bearer ' + auth.token\n                    });\n                setGroupDetails(responseData);\n            } catch (err) {}\n        };\n        fetchTasks();\n    }, [sendRequest, auth.token, groupId]);\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && groupDetails && <UsersList items={groupDetails.users} groupId={groupId}/>}\n            {!isLoading && groupDetails && <TaskList items={groupDetails.tasks} groupId={groupId} refreshPage={refreshPage} />}\n        </React.Fragment>\n    );\n};\n\nexport default GroupDetails;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAAQC,aAAR,QAA4B,8BAA5B;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,kBAApC;AACA,SAAQC,WAAR,QAA0B,mCAA1B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB,MAAMC,IAAI,GAAGZ,UAAU,CAACS,WAAD,CAAvB;EACA,MAAM;IAACI,SAAD;IAAYC,KAAZ;IAAmBC,WAAnB;IAAgCC;EAAhC,IAA8CV,aAAa,EAAjE;EACA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,EAAhD;EACA,MAAMiB,OAAO,GAAGZ,SAAS,GAAGY,OAA5B;EACA,MAAMC,OAAO,GAAGZ,UAAU,EAA1B;;EAEA,MAAMa,WAAW,GAAG,MAAM;IACtBD,OAAO,CAACE,EAAR,CAAW,CAAX;EACH,CAFD;;EAIArB,SAAS,CAAC,MAAK;IACX,MAAMsB,UAAU,GAAG,YAAY;MAC3B,IAAI;QACA,MAAMC,YAAY,GAAG,MAAMT,WAAW,CAClC,sCAAsCI,OADJ,EAElC,KAFkC,EAGlC,IAHkC,EAIlC;UACIM,aAAa,EAAE,YAAYb,IAAI,CAACc;QADpC,CAJkC,CAAtC;QAOAR,eAAe,CAACM,YAAD,CAAf;MACH,CATD,CASE,OAAOG,GAAP,EAAY,CAAE;IACnB,CAXD;;IAYAJ,UAAU;EACb,CAdQ,EAcN,CAACR,WAAD,EAAcH,IAAI,CAACc,KAAnB,EAA0BP,OAA1B,CAdM,CAAT;EAgBA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,UAAD;MAAY,KAAK,EAAEL,KAAnB;MAA0B,OAAO,EAAEE;IAAnC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKH,SAAS,iBACN;MAAK,SAAS,EAAC,QAAf;MAAA,uBACI,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHR,EAOK,CAACA,SAAD,IAAcI,YAAd,iBAA8B,QAAC,SAAD;MAAW,KAAK,EAAEA,YAAY,CAACW,KAA/B;MAAsC,OAAO,EAAET;IAA/C;MAAA;MAAA;MAAA;IAAA,QAPnC,EAQK,CAACN,SAAD,IAAcI,YAAd,iBAA8B,QAAC,QAAD;MAAU,KAAK,EAAEA,YAAY,CAACY,KAA9B;MAAqC,OAAO,EAAEV,OAA9C;MAAuD,WAAW,EAAEE;IAApE;MAAA;MAAA;MAAA;IAAA,QARnC;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAvCD;;GAAMV,Y;UAEkDL,a,EAEpCC,S,EACAC,U;;;KALdG,Y;AAyCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}