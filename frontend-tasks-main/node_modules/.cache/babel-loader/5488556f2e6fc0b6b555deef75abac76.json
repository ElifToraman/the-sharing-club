{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  _s();\n\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n  return [formState, inputHandler, setFormData];\n};\n\n_s(useForm, \"Te4axzSJ9fG9I4qbIliCh0U761c=\");","map":{"version":3,"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","formState","dispatch","inputHandler","id","setFormData","inputData","formValidity"],"sources":["/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/shared/hooks/form-hook.js"],"sourcesContent":["import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if(!state.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\n                },\n                isValid: formIsValid\n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            };\n        default:\n            return state;\n    }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            inputId: id\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    }, []);\n\n    return [formState, inputHandler, setFormData];\n};"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACnC,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,cAAL;MACI,IAAIC,WAAW,GAAG,IAAlB;;MACA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;QAChC,IAAG,CAACL,KAAK,CAACK,MAAN,CAAaD,OAAb,CAAJ,EAA2B;UACvB;QACH;;QACD,IAAIA,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;UAC5BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;QACH,CAFD,MAEO;UACHH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;QACH;MACJ;;MACD,OAAO,EACH,GAAGN,KADA;QAEHK,MAAM,EAAE,EACJ,GAAGL,KAAK,CAACK,MADL;UAEJ,CAACJ,MAAM,CAACG,OAAR,GAAkB;YAAEG,KAAK,EAAEN,MAAM,CAACM,KAAhB;YAAuBD,OAAO,EAAEL,MAAM,CAACK;UAAvC;QAFd,CAFL;QAMHA,OAAO,EAAEH;MANN,CAAP;;IAQJ,KAAK,UAAL;MACI,OAAO;QACHE,MAAM,EAAEJ,MAAM,CAACI,MADZ;QAEHC,OAAO,EAAEL,MAAM,CAACE;MAFb,CAAP;;IAIJ;MACI,OAAOH,KAAP;EA3BR;AA6BH,CA9BD;;AAgCA,OAAO,MAAMQ,OAAO,GAAG,CAACC,aAAD,EAAgBC,mBAAhB,KAAwC;EAAA;;EAC3D,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBd,UAAU,CAACC,WAAD,EAAc;IAClDM,MAAM,EAAEI,aAD0C;IAElDH,OAAO,EAAEI;EAFyC,CAAd,CAAxC;EAKA,MAAMG,YAAY,GAAGhB,WAAW,CAAC,CAACiB,EAAD,EAAKP,KAAL,EAAYD,OAAZ,KAAwB;IACrDM,QAAQ,CAAC;MACLV,IAAI,EAAE,cADD;MAELK,KAAK,EAAEA,KAFF;MAGLD,OAAO,EAAEA,OAHJ;MAILF,OAAO,EAAEU;IAJJ,CAAD,CAAR;EAMH,CAP+B,EAO7B,EAP6B,CAAhC;EASA,MAAMC,WAAW,GAAGlB,WAAW,CAAC,CAACmB,SAAD,EAAYC,YAAZ,KAA6B;IACzDL,QAAQ,CAAC;MACLV,IAAI,EAAE,UADD;MAELG,MAAM,EAAEW,SAFH;MAGLb,WAAW,EAAEc;IAHR,CAAD,CAAR;EAKH,CAN8B,EAM5B,EAN4B,CAA/B;EAQA,OAAO,CAACN,SAAD,EAAYE,YAAZ,EAA0BE,WAA1B,CAAP;AACH,CAxBM;;GAAMP,O"},"metadata":{},"sourceType":"module"}