{"ast":null,"code":"var _jsxFileName = \"/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/user/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest('http://localhost:5000/api/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest('http://localhost:5000/api/users/signup', 'POST', formData);\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 30\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 36\n        }, this), \"Thanks to this application, you can add, edit and complete the tasks that need to be done in the common areas, and if you complete them, you can earn points and compete with your friends.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 26\n        }, this), \"Start using it by registering now!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter a name.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(ImageUpload, {\n          center: true,\n          id: \"image\",\n          onInput: inputHandler,\n          errorText: \"Please provide an image.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"email\",\n          type: \"email\",\n          label: \"E-Mail\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email address.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(6)],\n          errorText: \"Please enter a valid password, at least 6 characters.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Don't you have account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"ZS4TGheY9rJkAPs+pVMoX6ZiyOk=\", false, function () {\n  return [useHttpClient, useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","useForm","useHttpClient","AuthContext","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Auth","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","image","prevMode","authSubmitHandler","event","preventDefault","console","log","responseData","JSON","stringify","login","userId","token","err","formData","FormData","append"],"sources":["/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {useForm} from \"../../shared/hooks/form-hook\";\nimport {useHttpClient} from \"../../shared/hooks/http-hook\";\nimport {AuthContext} from \"../../shared/context/auth-context\";\nimport {\n    VALIDATOR_EMAIL,\n    VALIDATOR_MINLENGTH,\n    VALIDATOR_REQUIRE\n} from \"../../shared/util/validators\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n    const auth = useContext(AuthContext);\n    const [isLoginMode, setIsLoginMode] = useState(true);\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n    const [formState, inputHandler, setFormData]= useForm(\n        {\n        email : {\n            value: '',\n            isValid: false\n        },\n        password: {\n            value: '',\n            isValid: false\n        }\n    }, false);\n\n    const switchModeHandler = () => {\n        if(!isLoginMode) {\n            setFormData(\n                {\n                    ...formState.inputs,\n                    name: undefined,\n                    image: undefined\n                }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n        } else {\n            setFormData(\n                {\n                ...formState.inputs,\n                name: {\n                    value: '',\n                    isValid: false\n                },\n                image: {\n                    value: null,\n                    isValid: false\n                }\n            }, false);\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    };\n\n    const authSubmitHandler = async event => {\n        event.preventDefault();\n        console.log(formState.inputs);\n        if (isLoginMode) {\n            try {\n                const responseData = await sendRequest(\n                    'http://localhost:5000/api/users/login',\n                    'POST',\n                    JSON.stringify({\n                        email: formState.inputs.email.value,\n                        password: formState.inputs.password.value\n                    }),\n                    {\n                        'Content-Type': 'application/json'\n                    }\n                );\n                auth.login(responseData.userId, responseData.token);\n            } catch (err) {}\n        } else {\n            try {\n                const formData = new FormData();\n                formData.append('email', formState.inputs.email.value);\n                formData.append('name', formState.inputs.name.value);\n                formData.append('password', formState.inputs.password.value);\n                formData.append('image', formState.inputs.image.value);\n                const responseData = await sendRequest(\n                     'http://localhost:5000/api/users/signup',\n                    'POST',\n                   formData\n                );\n                auth.login(responseData.userId, responseData.token);\n            } catch (err) {}\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <div className=\"welcome\">\n                <h2>Welcome! <br/> <br/>Thanks to this application, you can add, edit and complete the tasks that need to be done in the common areas,\n                    and if you complete them, you can earn points and compete with your friends.\n                    <br/><br/>Start using it by registering now!\n                </h2>\n            </div>\n            <Card className=\"authentication\">\n                {isLoading && <LoadingSpinner asOverlay/>}\n                <h2>Login Required</h2>\n                <hr />\n                <form onSubmit={authSubmitHandler}>\n                    {!isLoginMode &&\n                        <Input\n                            element=\"input\"\n                            id=\"name\"\n                            type=\"text\"\n                            label=\"Name\"\n                            validators={[VALIDATOR_REQUIRE()]}\n                            errorText=\"Please enter a name.\"\n                            onInput={inputHandler}\n                        />\n                    }\n                    {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image.\"/>}\n                    <Input\n                        element=\"input\"\n                        id=\"email\"\n                        type=\"email\"\n                        label=\"E-Mail\"\n                        validators = {[VALIDATOR_EMAIL()]}\n                        errorText=\"Please enter a valid email address.\"\n                        onInput={inputHandler}\n                    />\n                    <Input\n                        element=\"input\"\n                        id=\"password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        validators = {[VALIDATOR_MINLENGTH(6)]}\n                        errorText=\"Please enter a valid password, at least 6 characters.\"\n                        onInput={inputHandler}\n                    />\n                    <Button type=\"submit\" disabled={!formState.isValid}>\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n                    </Button>\n                </form>\n                <p>Don't you have account?</p>\n                <Button inverse onClick={switchModeHandler}>\n                    SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                </Button>\n            </Card>\n        </React.Fragment>\n    );\n};\n\nexport default Auth;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,SAAQC,OAAR,QAAsB,8BAAtB;AACA,SAAQC,aAAR,QAA4B,8BAA5B;AACA,SAAQC,WAAR,QAA0B,mCAA1B;AACA,SACIC,eADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,QAIO,8BAJP;AAKA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAMC,IAAI,GAAGd,UAAU,CAACS,WAAD,CAAvB;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM;IAACkB,SAAD;IAAYC,KAAZ;IAAmBC,WAAnB;IAAgCC;EAAhC,IAA8CZ,aAAa,EAAjE;EAEA,MAAM,CAACa,SAAD,EAAYC,YAAZ,EAA0BC,WAA1B,IAAwChB,OAAO,CACjD;IACAiB,KAAK,EAAG;MACJC,KAAK,EAAE,EADH;MAEJC,OAAO,EAAE;IAFL,CADR;IAKAC,QAAQ,EAAE;MACNF,KAAK,EAAE,EADD;MAENC,OAAO,EAAE;IAFH;EALV,CADiD,EAUlD,KAVkD,CAArD;;EAYA,MAAME,iBAAiB,GAAG,MAAM;IAC5B,IAAG,CAACb,WAAJ,EAAiB;MACbQ,WAAW,CACP,EACI,GAAGF,SAAS,CAACQ,MADjB;QAEIC,IAAI,EAAEC,SAFV;QAGIC,KAAK,EAAED;MAHX,CADO,EAKJV,SAAS,CAACQ,MAAV,CAAiBL,KAAjB,CAAuBE,OAAvB,IAAkCL,SAAS,CAACQ,MAAV,CAAiBF,QAAjB,CAA0BD,OALxD,CAAX;IAMH,CAPD,MAOO;MACHH,WAAW,CACP,EACA,GAAGF,SAAS,CAACQ,MADb;QAEAC,IAAI,EAAE;UACFL,KAAK,EAAE,EADL;UAEFC,OAAO,EAAE;QAFP,CAFN;QAMAM,KAAK,EAAE;UACHP,KAAK,EAAE,IADJ;UAEHC,OAAO,EAAE;QAFN;MANP,CADO,EAWR,KAXQ,CAAX;IAYH;;IACDV,cAAc,CAACiB,QAAQ,IAAI,CAACA,QAAd,CAAd;EACH,CAvBD;;EAyBA,MAAMC,iBAAiB,GAAG,MAAMC,KAAN,IAAe;IACrCA,KAAK,CAACC,cAAN;IACAC,OAAO,CAACC,GAAR,CAAYjB,SAAS,CAACQ,MAAtB;;IACA,IAAId,WAAJ,EAAiB;MACb,IAAI;QACA,MAAMwB,YAAY,GAAG,MAAMpB,WAAW,CAClC,uCADkC,EAElC,MAFkC,EAGlCqB,IAAI,CAACC,SAAL,CAAe;UACXjB,KAAK,EAAEH,SAAS,CAACQ,MAAV,CAAiBL,KAAjB,CAAuBC,KADnB;UAEXE,QAAQ,EAAEN,SAAS,CAACQ,MAAV,CAAiBF,QAAjB,CAA0BF;QAFzB,CAAf,CAHkC,EAOlC;UACI,gBAAgB;QADpB,CAPkC,CAAtC;QAWAX,IAAI,CAAC4B,KAAL,CAAWH,YAAY,CAACI,MAAxB,EAAgCJ,YAAY,CAACK,KAA7C;MACH,CAbD,CAaE,OAAOC,GAAP,EAAY,CAAE;IACnB,CAfD,MAeO;MACH,IAAI;QACA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;QACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB3B,SAAS,CAACQ,MAAV,CAAiBL,KAAjB,CAAuBC,KAAhD;QACAqB,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB3B,SAAS,CAACQ,MAAV,CAAiBC,IAAjB,CAAsBL,KAA9C;QACAqB,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B3B,SAAS,CAACQ,MAAV,CAAiBF,QAAjB,CAA0BF,KAAtD;QACAqB,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB3B,SAAS,CAACQ,MAAV,CAAiBG,KAAjB,CAAuBP,KAAhD;QACA,MAAMc,YAAY,GAAG,MAAMpB,WAAW,CACjC,wCADiC,EAElC,MAFkC,EAGnC2B,QAHmC,CAAtC;QAKAhC,IAAI,CAAC4B,KAAL,CAAWH,YAAY,CAACI,MAAxB,EAAgCJ,YAAY,CAACK,KAA7C;MACH,CAZD,CAYE,OAAOC,GAAP,EAAY,CAAE;IACnB;EACJ,CAjCD;;EAmCA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,UAAD;MAAY,KAAK,EAAE3B,KAAnB;MAA0B,OAAO,EAAEE;IAAnC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,SAAf;MAAA,uBACI;QAAA,qCAAa;UAAA;UAAA;UAAA;QAAA,QAAb,oBAAmB;UAAA;UAAA;UAAA;QAAA,QAAnB,8MAEI;UAAA;UAAA;UAAA;QAAA,QAFJ,eAES;UAAA;UAAA;UAAA;QAAA,QAFT;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ,eAQI,QAAC,IAAD;MAAM,SAAS,EAAC,gBAAhB;MAAA,WACKH,SAAS,iBAAI,QAAC,cAAD;QAAgB,SAAS;MAAzB;QAAA;QAAA;QAAA;MAAA,QADlB,eAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAM,QAAQ,EAAEiB,iBAAhB;QAAA,WACK,CAACnB,WAAD,iBACG,QAAC,KAAD;UACI,OAAO,EAAC,OADZ;UAEI,EAAE,EAAC,MAFP;UAGI,IAAI,EAAC,MAHT;UAII,KAAK,EAAC,MAJV;UAKI,UAAU,EAAE,CAACH,iBAAiB,EAAlB,CALhB;UAMI,SAAS,EAAC,sBANd;UAOI,OAAO,EAAEU;QAPb;UAAA;UAAA;UAAA;QAAA,QAFR,EAYK,CAACP,WAAD,iBAAgB,QAAC,WAAD;UAAa,MAAM,MAAnB;UAAoB,EAAE,EAAC,OAAvB;UAA+B,OAAO,EAAEO,YAAxC;UAAsD,SAAS,EAAC;QAAhE;UAAA;UAAA;UAAA;QAAA,QAZrB,eAaI,QAAC,KAAD;UACI,OAAO,EAAC,OADZ;UAEI,EAAE,EAAC,OAFP;UAGI,IAAI,EAAC,OAHT;UAII,KAAK,EAAC,QAJV;UAKI,UAAU,EAAI,CAACZ,eAAe,EAAhB,CALlB;UAMI,SAAS,EAAC,qCANd;UAOI,OAAO,EAAEY;QAPb;UAAA;UAAA;UAAA;QAAA,QAbJ,eAsBI,QAAC,KAAD;UACI,OAAO,EAAC,OADZ;UAEI,EAAE,EAAC,UAFP;UAGI,IAAI,EAAC,UAHT;UAII,KAAK,EAAC,UAJV;UAKI,UAAU,EAAI,CAACX,mBAAmB,CAAC,CAAD,CAApB,CALlB;UAMI,SAAS,EAAC,uDANd;UAOI,OAAO,EAAEW;QAPb;UAAA;UAAA;UAAA;QAAA,QAtBJ,eA+BI,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAsB,QAAQ,EAAE,CAACD,SAAS,CAACK,OAA3C;UAAA,UACKX,WAAW,GAAG,OAAH,GAAa;QAD7B;UAAA;UAAA;UAAA;QAAA,QA/BJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAuCI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAvCJ,eAwCI,QAAC,MAAD;QAAQ,OAAO,MAAf;QAAgB,OAAO,EAAEa,iBAAzB;QAAA,yBACeb,WAAW,GAAG,QAAH,GAAc,OADxC;MAAA;QAAA;QAAA;QAAA;MAAA,QAxCJ;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuDH,CApID;;GAAMF,I;UAGkDL,a,EAEND,O;;;KAL5CM,I;AAsIN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}