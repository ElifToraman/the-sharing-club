{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nlet logoutTimer;\nexport const useAuth = () => {\n  _s();\n\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId\n  };\n};\n\n_s(useAuth, \"+oy5I1iyA1O0VWPzFLYiMGJUUq0=\");","map":{"version":3,"names":["useState","useCallback","useEffect","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/shared/hooks/auth-hook.js"],"sourcesContent":["import { useState, useCallback, useEffect} from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(false);\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\n    const [userId, setUserId] = useState(false);\n\n    const login = useCallback((uid, token, expirationDate) => {\n        setToken(token);\n        setUserId(uid);\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n        setTokenExpirationDate(tokenExpirationDate);\n        localStorage.setItem(\n            'userData',\n            JSON.stringify({\n                userId: uid,\n                token: token,\n                expiration: tokenExpirationDate.toISOString()\n            })\n        );\n    }, []);\n\n    const logout = useCallback(() => {\n        setToken(null);\n        setTokenExpirationDate(null);\n        setUserId(null);\n        localStorage.removeItem('userData');\n    }, []);\n\n    useEffect(() => {\n        if (token && tokenExpirationDate) {\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n            logoutTimer = setTimeout(logout, remainingTime);\n        } else {\n            clearTimeout(logoutTimer);\n        }\n    }, [token, logout, tokenExpirationDate]);\n\n    useEffect(() => {\n        const storedData = JSON.parse(localStorage.getItem('userData'));\n        if (\n            storedData &&\n            storedData.token &&\n            new Date(storedData.expiration) > new Date()\n        ) {\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\n        }\n    }, [login]);\n\n    return { token, login, logout, userId};\n};"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAgD,OAAhD;AAEA,IAAIC,WAAJ;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACzB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACO,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,EAA9D;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;EAEA,MAAMW,KAAK,GAAGV,WAAW,CAAC,CAACW,GAAD,EAAMP,KAAN,EAAaQ,cAAb,KAAgC;IACtDP,QAAQ,CAACD,KAAD,CAAR;IACAK,SAAS,CAACE,GAAD,CAAT;IACA,MAAML,mBAAmB,GAAGM,cAAc,IAAI,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,EAAP,GAAY,EAA5C,CAA9C;IACAP,sBAAsB,CAACD,mBAAD,CAAtB;IACAS,YAAY,CAACC,OAAb,CACI,UADJ,EAEIC,IAAI,CAACC,SAAL,CAAe;MACXV,MAAM,EAAEG,GADG;MAEXP,KAAK,EAAEA,KAFI;MAGXe,UAAU,EAAEb,mBAAmB,CAACc,WAApB;IAHD,CAAf,CAFJ;EAQH,CAbwB,EAatB,EAbsB,CAAzB;EAeA,MAAMC,MAAM,GAAGrB,WAAW,CAAC,MAAM;IAC7BK,QAAQ,CAAC,IAAD,CAAR;IACAE,sBAAsB,CAAC,IAAD,CAAtB;IACAE,SAAS,CAAC,IAAD,CAAT;IACAM,YAAY,CAACO,UAAb,CAAwB,UAAxB;EACH,CALyB,EAKvB,EALuB,CAA1B;EAOArB,SAAS,CAAC,MAAM;IACZ,IAAIG,KAAK,IAAIE,mBAAb,EAAkC;MAC9B,MAAMiB,aAAa,GAAGjB,mBAAmB,CAACQ,OAApB,KAAgC,IAAID,IAAJ,GAAWC,OAAX,EAAtD;MACAZ,WAAW,GAAGsB,UAAU,CAACH,MAAD,EAASE,aAAT,CAAxB;IACH,CAHD,MAGO;MACHE,YAAY,CAACvB,WAAD,CAAZ;IACH;EACJ,CAPQ,EAON,CAACE,KAAD,EAAQiB,MAAR,EAAgBf,mBAAhB,CAPM,CAAT;EASAL,SAAS,CAAC,MAAM;IACZ,MAAMyB,UAAU,GAAGT,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,UAArB,CAAX,CAAnB;;IACA,IACIF,UAAU,IACVA,UAAU,CAACtB,KADX,IAEA,IAAIS,IAAJ,CAASa,UAAU,CAACP,UAApB,IAAkC,IAAIN,IAAJ,EAHtC,EAIE;MACEH,KAAK,CAACgB,UAAU,CAAClB,MAAZ,EAAoBkB,UAAU,CAACtB,KAA/B,EAAsC,IAAIS,IAAJ,CAASa,UAAU,CAACP,UAApB,CAAtC,CAAL;IACH;EACJ,CATQ,EASN,CAACT,KAAD,CATM,CAAT;EAWA,OAAO;IAAEN,KAAF;IAASM,KAAT;IAAgBW,MAAhB;IAAwBb;EAAxB,CAAP;AACH,CAhDM;;GAAML,O"},"metadata":{},"sourceType":"module"}