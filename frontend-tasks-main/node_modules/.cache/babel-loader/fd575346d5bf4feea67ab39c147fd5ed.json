{"ast":null,"code":"var _jsxFileName = \"/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/tasks/components/TaskItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { UilTrashAlt } from '@iconscout/react-unicons';\nimport { UilEdit } from '@iconscout/react-unicons';\nimport { UilCheckCircle } from '@iconscout/react-unicons';\nimport \"./TaskItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskItem = props => {\n  _s();\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const auth = useContext(AuthContext);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n\n    try {\n      await sendRequest(`http://localhost:5000/api/tasks/${props.id}`, 'DELETE', null, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      props.refreshPage();\n    } catch (err) {}\n  };\n\n  const markAsDoneHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(`http://localhost:5000/api/tasks/${props.id}/complete`, 'PUT', null, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      props.refreshPage();\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      header: \"Are you sure?\",\n      footerClass: \"task-item__modal-actions\",\n      footer: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          inverse: true,\n          onClick: cancelDeleteHandler,\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          danger: true,\n          onClick: confirmDeleteHandler,\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Do you want to proceed and delete this task? Please not that it can't be undone thereafter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `task-item ${props.isCompleted ? \"is-completed\" : ''}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"task-item__content\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          asOverlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-item__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"TITLE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 24\n            }, this), \" \", props.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"DESCRIPTION:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 24\n            }, this), \" \", props.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"SCORE: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 24\n            }, this), props.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-item__actions ${props.isCompleted ? \"mark-as-done\" : ''}`,\n          children: [auth.userId === props.creatorId && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              to: `/tasks/${props.id}`,\n              disabled: props.isCompleted,\n              children: [/*#__PURE__*/_jsxDEV(UilEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 92\n              }, this), \"Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              danger: true,\n              onClick: showDeleteWarningHandler,\n              children: [/*#__PURE__*/_jsxDEV(UilTrashAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 79\n              }, this), \"Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            done: true,\n            onClick: markAsDoneHandler,\n            children: [/*#__PURE__*/_jsxDEV(UilCheckCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 62\n            }, this), \"Mark as done\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskItem, \"MB3mY1SlN6h2vWWGJkf6WN+MWAE=\", false, function () {\n  return [useHttpClient];\n});\n\n_c = TaskItem;\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","useContext","Card","Button","Modal","LoadingSpinner","ErrorModal","useHttpClient","AuthContext","UilTrashAlt","UilEdit","UilCheckCircle","TaskItem","props","showConfirmModal","setShowConfirmModal","isLoading","error","sendRequest","clearError","auth","showDeleteWarningHandler","cancelDeleteHandler","confirmDeleteHandler","id","Authorization","token","refreshPage","err","markAsDoneHandler","event","preventDefault","isCompleted","title","description","score","userId","creatorId"],"sources":["/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/tasks/components/TaskItem.js"],"sourcesContent":["import React, {useState, useContext} from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\n\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport {useHttpClient} from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { UilTrashAlt } from '@iconscout/react-unicons'\nimport { UilEdit } from '@iconscout/react-unicons';\nimport { UilCheckCircle } from '@iconscout/react-unicons'\nimport \"./TaskItem.css\";\n\nconst TaskItem = props => {\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n    const auth = useContext(AuthContext);\n\n    const showDeleteWarningHandler = () => {\n        setShowConfirmModal(true);\n    };\n\n    const cancelDeleteHandler = () => {\n        setShowConfirmModal(false);\n    };\n\n    const confirmDeleteHandler = async () => {\n        setShowConfirmModal(false);\n        try {\n            await sendRequest(\n                `http://localhost:5000/api/tasks/${props.id}`,\n                'DELETE',\n                null,\n                {\n                    Authorization: 'Bearer ' + auth.token\n                }\n            );\n            props.refreshPage();\n        } catch (err) {}\n    };\n\n    const markAsDoneHandler = async event => {\n        event.preventDefault();\n        try {\n            await sendRequest(\n                `http://localhost:5000/api/tasks/${props.id}/complete`,\n                'PUT',\n                null,\n                {\n                    Authorization: 'Bearer ' + auth.token\n                }\n            );\n            props.refreshPage()\n        } catch (err) {}\n    };\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <Modal\n                show={showConfirmModal}\n                header= \"Are you sure?\" footerClass=\"task-item__modal-actions\"\n                footer={\n                <React.Fragment>\n                    <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\n                    <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\n                </React.Fragment>\n                }\n            >\n                <p>Do you want to proceed and delete this task? Please not that it can't be undone thereafter.</p>\n            </Modal>\n            <li className={`task-item ${props.isCompleted ? \"is-completed\" : ''}`}>\n                <Card className=\"task-item__content\">\n                    {isLoading && <LoadingSpinner asOverlay />}\n                <div className=\"task-item__info\">\n                    <p><strong>TITLE:</strong> {props.title}</p>\n                    <p><strong>DESCRIPTION:</strong> {props.description}</p>\n                    <p><strong>SCORE: </strong>{props.score}</p>\n                </div>\n                <div className={`task-item__actions ${props.isCompleted ? \"mark-as-done\" : ''}`}>\n                    {auth.userId === props.creatorId && (\n                        <React.Fragment>\n                            <Button to={`/tasks/${props.id}`} disabled={props.isCompleted}><UilEdit />Edit</Button>\n                            <Button danger onClick={showDeleteWarningHandler}><UilTrashAlt />Delete</Button>\n                        </React.Fragment>\n                    )}\n                    <Button done onClick={markAsDoneHandler}><UilCheckCircle />Mark as done</Button>\n                </div>\n                </Card>\n            </li>\n        </React.Fragment>\n    );\n};\nexport default TaskItem;"],"mappings":"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"},"metadata":{},"sourceType":"module"}