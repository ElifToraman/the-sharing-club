{"ast":null,"code":"var _jsxFileName = \"/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport User from \"./user/pages/User\";\nimport NewTask from \"./tasks/components/NewTask\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport UpdateTask from \"./tasks/components/UpdateTask\";\nimport Auth from \"./user/pages/Auth\";\nimport GroupDetails from \"./groups/pages/GroupDetails\";\nimport Groups from \"./groups/pages/Groups\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport UserGroups from \"./groups/pages/UserGroups\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    token,\n    login,\n    logout,\n    userId,\n    groupId\n  } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/groups\",\n        children: /*#__PURE__*/_jsxDEV(Groups, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/my-groups\",\n        children: /*#__PURE__*/_jsxDEV(UserGroups, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/groups/:groupId/details\",\n        children: /*#__PURE__*/_jsxDEV(GroupDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/groups/:groupId/tasks/new\",\n        children: /*#__PURE__*/_jsxDEV(NewTask, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/tasks/:taskId\",\n        children: /*#__PURE__*/_jsxDEV(UpdateTask, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/auth\",\n        children: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      groupId: groupId,\n      login: login,\n      logout: logout\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"yvVsXwb6TzMpvU7q3WSIKadVhNU=\", false, function () {\n  return [useAuth];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Redirect","Switch","User","NewTask","MainNavigation","UpdateTask","Auth","GroupDetails","Groups","AuthContext","useAuth","UserGroups","App","token","login","logout","userId","groupId","routes","isLoggedIn"],"sources":["/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n    Switch\n} from \"react-router-dom\";\n\nimport User from \"./user/pages/User\";\nimport NewTask from \"./tasks/components/NewTask\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport UpdateTask from \"./tasks/components/UpdateTask\";\nimport Auth from \"./user/pages/Auth\";\nimport GroupDetails from \"./groups/pages/GroupDetails\";\nimport Groups from \"./groups/pages/Groups\";\nimport {AuthContext} from \"./shared/context/auth-context\";\nimport {useAuth} from \"./shared/hooks/auth-hook\";\nimport UserGroups from \"./groups/pages/UserGroups\";\n\nconst App = () => {\n    const {token, login, logout, userId, groupId} = useAuth();\n    let routes;\n\n    if(token) {\n        routes = (\n            <Switch>\n                <Route exact path=\"/\" >\n                    <User />\n                </Route>\n                <Route exact path=\"/groups\">\n                    <Groups />\n                </Route>\n                <Route exact path=\"/my-groups\">\n                    <UserGroups />\n                </Route>\n                <Route exact path=\"/groups/:groupId/details\">\n                    <GroupDetails />\n                </Route>\n                <Route exact path=\"/groups/:groupId/tasks/new\">\n                    <NewTask />\n                </Route>\n                <Route exact path=\"/tasks/:taskId\">\n                    <UpdateTask />\n                </Route>\n                <Redirect to=\"/\"></Redirect>\n            </Switch>\n        );\n    } else {\n        routes = (\n            <Switch>\n                <Route exact path=\"/auth\">\n                    <Auth />\n                </Route>\n            </Switch>\n        );\n    }\n    return (\n      <AuthContext.Provider\n          value={{\n              isLoggedIn: !!token,\n              token: token,\n              userId: userId,\n              groupId: groupId,\n              login: login,\n              logout:logout\n          }}\n      >\n          <Router>\n              <MainNavigation />\n              <main>{routes}</main>\n          </Router>\n      </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}