{"ast":null,"code":"var _jsxFileName = \"/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/groups/pages/UserGroups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport GroupList from \"../components/GroupList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserGroups = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedGroups, setLoadedGroups] = useState();\n  const userId = auth.userId;\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/groups/user/${userId}`, 'GET', null, {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        });\n        setLoadedGroups(responseData.groups);\n      } catch (err) {}\n    };\n\n    fetchGroups();\n  }, [sendRequest, userId, auth.token]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), !isLoading && loadedGroups && /*#__PURE__*/_jsxDEV(GroupList, {\n      items: loadedGroups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserGroups, \"8LAOM7A3IXqJ0SMjrJBdoIvpw9o=\", false, function () {\n  return [useHttpClient];\n});\n\n_c = UserGroups;\nexport default UserGroups;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserGroups\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GroupList","ErrorModal","LoadingSpinner","useHttpClient","AuthContext","UserGroups","auth","isLoading","error","sendRequest","clearError","loadedGroups","setLoadedGroups","userId","fetchGroups","responseData","Authorization","token","groups","err"],"sources":["/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/groups/pages/UserGroups.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\n\nimport GroupList from \"../components/GroupList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {useHttpClient} from \"../../shared/hooks/http-hook\";\nimport {AuthContext} from \"../../shared/context/auth-context\";\n\nconst UserGroups = () => {\n    const auth = useContext(AuthContext);\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n    const [loadedGroups, setLoadedGroups] = useState();\n\n    const userId = auth.userId;\n\n    useEffect(() => {\n        const fetchGroups = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `http://localhost:5000/api/groups/user/${userId}`,\n                    'GET',\n                    null,\n                    {\n                        'Content-Type': 'application/json',\n                        Authorization: 'Bearer ' + auth.token\n                    });\n                setLoadedGroups(responseData.groups);\n            } catch (err) {}\n        };\n        fetchGroups();\n    }, [sendRequest, userId, auth.token]);\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedGroups && <GroupList items={loadedGroups} />}\n        </React.Fragment>\n    );\n};\n\nexport default UserGroups;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAAQC,aAAR,QAA4B,8BAA5B;AACA,SAAQC,WAAR,QAA0B,mCAA1B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAMC,IAAI,GAAGT,UAAU,CAACO,WAAD,CAAvB;EACA,MAAM;IAACG,SAAD;IAAYC,KAAZ;IAAmBC,WAAnB;IAAgCC;EAAhC,IAA8CP,aAAa,EAAjE;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,EAAhD;EAEA,MAAMc,MAAM,GAAGP,IAAI,CAACO,MAApB;EAEAf,SAAS,CAAC,MAAM;IACZ,MAAMgB,WAAW,GAAG,YAAY;MAC5B,IAAI;QACA,MAAMC,YAAY,GAAG,MAAMN,WAAW,CACjC,yCAAwCI,MAAO,EADd,EAElC,KAFkC,EAGlC,IAHkC,EAIlC;UACI,gBAAgB,kBADpB;UAEIG,aAAa,EAAE,YAAYV,IAAI,CAACW;QAFpC,CAJkC,CAAtC;QAQAL,eAAe,CAACG,YAAY,CAACG,MAAd,CAAf;MACH,CAVD,CAUE,OAAOC,GAAP,EAAY,CAAE;IACnB,CAZD;;IAaAL,WAAW;EACd,CAfQ,EAeN,CAACL,WAAD,EAAcI,MAAd,EAAsBP,IAAI,CAACW,KAA3B,CAfM,CAAT;EAiBA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,UAAD;MAAY,KAAK,EAAET,KAAnB;MAA0B,OAAO,EAAEE;IAAnC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKH,SAAS,iBACN;MAAK,SAAS,EAAC,QAAf;MAAA,uBACI,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHR,EAOK,CAACA,SAAD,IAAcI,YAAd,iBAA8B,QAAC,SAAD;MAAW,KAAK,EAAEA;IAAlB;MAAA;MAAA;MAAA;IAAA,QAPnC;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAnCD;;GAAMN,U;UAEkDF,a;;;KAFlDE,U;AAqCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}