{"ast":null,"code":"var _jsxFileName = \"/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/groups/pages/Groups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport GroupList from \"../components/GroupList\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Groups.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Groups = () => {\n  _s();\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedGroups, setLoadedGroups] = useState();\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const [formState, inputHandler] = useForm({\n    name: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const responseData = await sendRequest('http://localhost:5000/api/groups/all', 'GET', null, {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        });\n        setLoadedGroups(responseData.groups.filter(groups => {\n          return !groups.users.includes(auth.userId);\n        }));\n      } catch (err) {}\n    };\n\n    fetchGroups();\n  }, [sendRequest, auth.token, auth.userId]);\n\n  const showCreateGroupHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelCreateHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const groupSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest('http://localhost:5000/api/groups', 'POST', JSON.stringify({\n        name: formState.inputs.name.value\n      }), {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + auth.token\n      });\n      setShowConfirmModal(false);\n      history.push('/my-groups');\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      header: \"Do you want create a group?\",\n      footerClass: \"task-item__modal-actions\",\n      footer: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"group-form\",\n        onSubmit: groupSubmitHandler,\n        children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          asOverlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"name\",\n          element: \"input\",\n          name: \"name\",\n          type: \"text\",\n          label: \"Group Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter a group name.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          inverse: true,\n          onClick: cancelCreateHandler,\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: \"CREATE GROUP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can create a group by filling out the form below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_group__actions\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: showCreateGroupHandler,\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), !isLoading && loadedGroups && /*#__PURE__*/_jsxDEV(GroupList, {\n      items: loadedGroups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Groups, \"3weeFmC35xu8/w6qpIOamCPsARg=\", false, function () {\n  return [useHttpClient, useHistory, useForm];\n});\n\n_c = Groups;\nexport default Groups;\n\nvar _c;\n\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GroupList","Button","Modal","LoadingSpinner","Input","VALIDATOR_REQUIRE","useHttpClient","useHistory","useForm","AuthContext","ErrorModal","Groups","showConfirmModal","setShowConfirmModal","isLoading","error","sendRequest","clearError","loadedGroups","setLoadedGroups","history","auth","formState","inputHandler","name","value","isValid","fetchGroups","responseData","Authorization","token","groups","filter","users","includes","userId","err","showCreateGroupHandler","cancelCreateHandler","groupSubmitHandler","event","preventDefault","JSON","stringify","inputs","push"],"sources":["/Users/eliftoraman/Desktop/The-Sharing-Club/frontend-tasks-main/src/groups/pages/Groups.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport GroupList from \"../components/GroupList\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport {VALIDATOR_REQUIRE} from \"../../shared/util/validators\";\nimport {useHttpClient} from \"../../shared/hooks/http-hook\";\nimport {useHistory} from \"react-router-dom\";\nimport {useForm} from \"../../shared/hooks/form-hook\";\nimport {AuthContext} from \"../../shared/context/auth-context\";\nimport \"./Groups.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\n\nconst Groups = () => {\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n    const [loadedGroups, setLoadedGroups] = useState();\n    const history = useHistory();\n    const auth = useContext(AuthContext);\n\n    const [formState, inputHandler]= useForm(\n        {\n            name: {\n                value: '',\n                isValid: false\n            }\n        }, false);\n\n    useEffect(()=> {\n        const fetchGroups = async () => {\n            try {\n                const responseData = await sendRequest(\n                    'http://localhost:5000/api/groups/all',\n                    'GET',\n                    null,\n                    {\n                        'Content-Type': 'application/json',\n                        Authorization: 'Bearer ' + auth.token\n                    });\n                setLoadedGroups(responseData.groups.filter(groups => {\n                    return !groups.users.includes(auth.userId);\n                }));\n\n            } catch (err) {}\n        };\n        fetchGroups();\n    }, [sendRequest, auth.token, auth.userId]);\n\n    const showCreateGroupHandler = () => {\n        setShowConfirmModal(true);\n    };\n\n    const cancelCreateHandler = () => {\n        setShowConfirmModal(false);\n    };\n    const groupSubmitHandler = async event => {\n        event.preventDefault();\n        try {\n                await sendRequest(\n                'http://localhost:5000/api/groups',\n                'POST',\n                JSON.stringify({\n                    name: formState.inputs.name.value\n                }),\n                {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + auth.token\n                }\n            );\n            setShowConfirmModal(false);\n            history.push('/my-groups');\n        } catch (err) {}\n    };\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError}/>\n            <Modal\n                show={showConfirmModal}\n                header= \"Do you want create a group?\" footerClass=\"task-item__modal-actions\"\n                footer={\n                        <form className=\"group-form\" onSubmit={groupSubmitHandler}>\n                            {isLoading && <LoadingSpinner asOverlay />}\n                            <Input\n                                id=\"name\"\n                                element=\"input\"\n                                name=\"name\"\n                                type=\"text\"\n                                label=\"Group Name\"\n                                validators={[VALIDATOR_REQUIRE()]}\n                                errorText=\"Please enter a group name.\"\n                                onInput={inputHandler}\n                            />\n                            <Button type=\"button\" inverse onClick={cancelCreateHandler}>CANCEL</Button>\n                            <Button type=\"submit\" disabled={!formState.isValid}>\n                                CREATE GROUP\n                            </Button>\n                        </form>\n                }\n            >\n                <p>You can create a group by filling out the form below.</p>\n            </Modal>\n            <div className=\"create_group__actions\">\n                <Button onClick={showCreateGroupHandler}>Create Group</Button>\n            </div>\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedGroups && <GroupList items={loadedGroups} />}\n        </React.Fragment>\n    );\n};\n\nexport default Groups;"],"mappings":"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"},"metadata":{},"sourceType":"module"}